/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cabinetmédical;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author iguer
 */
public class DossierMedical extends javax.swing.JFrame {
  Connection con;
    PreparedStatement pst;
    ResultSet rs;
    /**
     * Creates new form DossierMedical
     */
    public DossierMedical() {
        initComponents();
    }

    
      public void Connect (){ 
        try {
           Class.forName("org.sqlite.JDBC");
         con = DriverManager.getConnection("jdbc:sqlite:cabinet.db");
        }
        catch (Exception e){
          e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        obsmed = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        obschir = new javax.swing.JTextArea();
        recherche = new javax.swing.JButton();
        obsmed1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtnom = new javax.swing.JTextField();
        txtprenom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Menu = new javax.swing.JButton();
        medicament = new javax.swing.JTextField();
        dosage = new javax.swing.JTextField();
        prd = new javax.swing.JTextField();
        medicame = new javax.swing.JLabel();
        dos = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dossier Médical");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 204, 153)));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 12, 367, 57));

        obsmed.setColumns(20);
        obsmed.setRows(5);
        jScrollPane1.setViewportView(obsmed);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 390, 510, 145));

        obschir.setColumns(20);
        obschir.setRows(5);
        jScrollPane2.setViewportView(obschir);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 390, 530, 146));

        recherche.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 24)); // NOI18N
        recherche.setForeground(new java.awt.Color(102, 153, 255));
        recherche.setText("Rechercher");
        recherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheActionPerformed(evt);
            }
        });
        jPanel1.add(recherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 140, 42));

        obsmed1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 24)); // NOI18N
        obsmed1.setText("Observation Médical :");
        jPanel1.add(obsmed1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 360, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 24)); // NOI18N
        jLabel3.setText("Observation Chirurgical :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 226, 28));
        jPanel1.add(txtnom, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 134, 28));
        jPanel1.add(txtprenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 134, 30));

        jLabel4.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 24)); // NOI18N
        jLabel4.setText("Nom :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 71, 28));

        jLabel5.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 24)); // NOI18N
        jLabel5.setText("Prénom :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 168, 86, -1));

        Menu.setBackground(new java.awt.Color(0, 204, 153));
        Menu.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 36)); // NOI18N
        Menu.setForeground(new java.awt.Color(255, 255, 255));
        Menu.setText("Menu Principal");
        Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuActionPerformed(evt);
            }
        });
        jPanel1.add(Menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 620, 330, 46));
        jPanel1.add(medicament, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, 280, 130));
        jPanel1.add(dosage, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 140, 290, 130));
        jPanel1.add(prd, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 140, 270, 130));

        medicame.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 24)); // NOI18N
        medicame.setText("Médicaments :");
        jPanel1.add(medicame, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 140, 20));

        dos.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 24)); // NOI18N
        dos.setText("Dosages :");
        jPanel1.add(dos, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 100, 100, 30));

        jLabel8.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 24)); // NOI18N
        jLabel8.setText("Période de prise :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 110, 180, 20));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cabinetmédical/dossiermedical.png"))); // NOI18N
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1230, 700));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuActionPerformed
          DossierMedical.super.dispose ();
          MenuPrincipal M = new MenuPrincipal ();
          M.setVisible(true);
    }//GEN-LAST:event_MenuActionPerformed


    private void rechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheActionPerformed
   
  // Obtenir le nom et le prénom saisis
        String nom = txtnom.getText().toUpperCase();
        String prenom = txtprenom.getText().toUpperCase();

        try {
            // Se connecter à la base de données
            Connect();

            // Préparer la requête pour récupérer l'ID du patient
            PreparedStatement pstPatient = con.prepareStatement("SELECT idpatient FROM patient WHERE nom = ? AND prenom = ?");
            pstPatient.setString(1, nom);
            pstPatient.setString(2, prenom);

            // Exécuter la requête pour l'ID du patient
            ResultSet rsPatient = pstPatient.executeQuery();

            // Vérifier si un patient est trouvé
            if (rsPatient.next()) {
                int idPatient = rsPatient.getInt("idpatient");

                // Préparer la requête pour récupérer les observations du patient
                PreparedStatement pstConsultation = con.prepareStatement("SELECT obs_medical, obs_chirurgical FROM consultation WHERE idpatient = ?");
                pstConsultation.setInt(1, idPatient);

                // Exécuter la requête pour les observations
                ResultSet rsConsultation = pstConsultation.executeQuery();

                // Vérifier si des observations ont été trouvées
                if (rsConsultation.next()) {
                    // Récupérer les observations du ResultSet
                    String observationsMedicales = rsConsultation.getString("obs_medical");
                    String observationsChirurgicales = rsConsultation.getString("obs_chirurgical");

                    // Définir les valeurs dans les champs de texte
                    obsmed.setText(observationsMedicales);
                    obschir.setText(observationsChirurgicales);

                } else {
                    // Afficher un message si aucune observation n'est trouvée
                    JOptionPane.showMessageDialog(this, "Aucune observation trouvée pour ce patient.", "Observation introuvable", JOptionPane.INFORMATION_MESSAGE);
                }

                // Préparer la requête pour récupérer les informations sur les ordonnances
                PreparedStatement pstOrdonnance = con.prepareStatement("SELECT medicaments, dosages, periode FROM ordonnance WHERE idpatient = ?");
                pstOrdonnance.setInt(1, idPatient);

                // Exécuter la requête pour les ordonnances
                ResultSet rsOrdonnance = pstOrdonnance.executeQuery();

                // Vérifier si des ordonnances ont été trouvées
                StringBuilder medicaments = new StringBuilder();
                StringBuilder dosages = new StringBuilder();
                StringBuilder periodes = new StringBuilder();

                while (rsOrdonnance.next()) {
                    // Récupérer les informations de l'ordonnance du ResultSet
                    String med = rsOrdonnance.getString("medicaments");
                    String dos = rsOrdonnance.getString("dosages");
                    String prd = rsOrdonnance.getString("periode");

                    // Ajouter les informations aux StringBuilder pour l'affichage
                    medicaments.append(med).append("\n");
                    dosages.append(dos).append("\n");
                    periodes.append(prd).append("\n");
                }

                if (medicaments.length() > 0) {
                    // Définir les valeurs dans les champs de texte
                    medicament.setText(medicaments.toString());
                    dosage.setText(dosages.toString());
                    prd.setText(periodes.toString());
                } else {
                    // Afficher un message si aucune ordonnance n'est trouvée
                    JOptionPane.showMessageDialog(this, "Aucune ordonnance trouvée pour ce patient.", "Ordonnance introuvable", JOptionPane.INFORMATION_MESSAGE);
                }

            } else {
                // Afficher le message d'erreur si aucun patient n'est trouvé
                JOptionPane.showMessageDialog(this, "Aucun patient trouvé avec le nom et prénom spécifiés.", "Patient introuvable", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur lors de la recherche des informations.", "Erreur", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (con != null && !con.isClosed()) {
                    con.close();
                }
            }catch (Exception e) {
            e.printStackTrace();
        }
    }
      
    }//GEN-LAST:event_rechercheActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DossierMedical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DossierMedical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DossierMedical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DossierMedical.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DossierMedical().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Menu;
    private javax.swing.JLabel dos;
    private javax.swing.JTextField dosage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel medicame;
    private javax.swing.JTextField medicament;
    private javax.swing.JTextArea obschir;
    private javax.swing.JTextArea obsmed;
    private javax.swing.JLabel obsmed1;
    private javax.swing.JTextField prd;
    private javax.swing.JButton recherche;
    private javax.swing.JTextField txtnom;
    private javax.swing.JTextField txtprenom;
    // End of variables declaration//GEN-END:variables
}
